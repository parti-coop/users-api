language: ruby

rvm:
  - 2.3.0

env:
  global:
    - USERS_API_REPO=partixyz/users-api

before_install:
  - sudo apt-get -y update
  - sudo apt-get -y install libpq-dev
  - apt-get -y install python-dev
  - sudo pip install -U docker-compose
  - export APP_VERSION=$( git describe  --tags --long || echo ${COMMIT::12} )

before_script:
  - docker-compose -f deploy/docker-compose-test.yml up -d db
  - DB_CONTAINER=$( docker-compose -f deploy/docker-compose-test.yml ps -q db )
  - export DB_HOST=$( docker inspect --format '{{ .NetworkSettings.IPAddress }}' $DB_CONTAINER )
  - docker-compose -f deploy/docker-compose-test.yml run --rm auth-api bin/rails db:setup
  - RAILS_ENV=test bin/rails db:setup
  - docker-compose -f deploy/docker-compose-test.yml up -d auth-api
  - AUTH_API_CONTAINER=$( docker-compose -f deploy/docker-compose-test.yml ps -q auth-api )
  - export AUTH_API_HOST=$( docker inspect --format '{{ .NetworkSettings.IPAddress }}' $AUTH_API_CONTAINER )

script:
  - RALIS_ENV=test bin/rails spec

after_success:
  - docker build -t partixyz/users-api:$APP_VERSION .
  - docker push partixyz/users-api:$APP_VERSION

integrations:
  hub:
    - integrationName: partixyz
      type: docker 
