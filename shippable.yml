language: ruby

rvm:
  - 2.3.0

env:
  global:
    - USERS_API_EXTERNAL_HOST=external.users-api
    - USERS_API_EXTERNAL_PORT=3031
    - USERS_API_REPO=partixyz/users-api

    - secure: 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

    - secure: 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

    - secure: 2UPhSRJHL0veN625L5IV4upVL4gf1nCMNSLqRpcyRfH1LUXbYltIEYxR/GQaCAPmx/QRiSfOTT4h3UQ9OYfEgPrXxdWu6CtQXs9fAeMOghYp8hUPyfAuYIpMstV2CFhc2ltIS6CDBxn5EutOU8Dl9a2SHxzcT8WDL+62ZRiPwzU3a/3xbUUJzvpaaFkM3KxDeJ7NhdER5AHbePc6QbT6qiMqerqta3eHshnF0/yh9sW9L7utEbgLfzeg5IXQysKgiZHAWj1KnOGQMjeuod48fAP2puYbmyA9i8YpYI70wCpZ+F0fgGzLljm00JeFvqHecD5EWgd25I8NnG6Q07zpjw==
    - secure: FUEhki72lEDUTrsgPbb31LlRGYSOpjXq5j7LlrePsschPKpJWKXtA3Zp7gq+gmgYcwhyNrJA7OVnWDPajN4d5i1vW8nP07c8cOFyyy9vag7hOVqoCRVo5edtDQnRKsTD8JCMx+A26d4ec+n8NPXxBQZp3eScXHTrSEVjf37zk+ToFFe18atdRI/cVOC6zjJzatKxC4gTKY9K1CdTPCk9JxmdyPUIrW3nJrz/XQiZcLIxqNa9H0kUNYBQYKKAqP/TnXmi0Hvq7CLg06TGytQE8Bl3p3quw3wDIgVf8KoPFfvACH5jHJ/SpASGiE/fXcrdenXlGqxB8KeUqC/V2fFpRQ==
    - secure: ni/N6H0xrGfg9Fod63ws2ExvnzoaQmm0dWpQBH70rOrsoegsfnWGsd3wioJ91wopk+I+77j2JCcBf1/TDobjUV3pnRhGjC/UvDP8uQIAA+4ZFXO+YC175Ogv00IW4i2KSfO5olg3/3dXv3vs13vX8IorgxrZ+QQctlKcrYJE/b3m9KY7mpXSbhK85Rzedkk62LM2aX48mtKPMM7FkMHCYUvtjV3AgUXsH+TTBdncm5fiwaiOAO66XpjAUz3wNJJKnFA4eZ4Gyz47R5T+M5HyojFum3LvlDwymXYfCD7jlXpeBEwMR8e8cx8Se5pq7feK/lLNIAw1NrPpTpGrL2g3+w==
    - secure: v7ab82BCnrtC4HLsPZyTWIY816aAyWKjCGY4Xv+oCvkBCsKyowCJCnJZBM6bSznAr33ZfYkM0EJlQOWK5bDMWi+HemQgQS06Q0ArhCJ5a0DNVev45fGo2xE48vDv7kOAfCqGZWF8qm1tPAUzbhgasqFhDRzZ9Ys5yUOyv0WGSDJnFhzpDuV4cbKkKhn4bzPzXGv6N/i620AAfJerHWPSf2vhhVCvdyqPmTDKSRv6OgWz6rXhvKRpib9LRXhfWuuvgYC0r2YwA0g8Az5+oNZnbmqgLdJsP4fHVIMXw93PCyijxgqLPRXYTLj2793PoDEOS5wQnqzwxdGHMBAVQpb+Pg==
    - secure: V22PbPD7+FcCV++S1Hio0sCSeTFv/1JqFJBs/0wqNUbagQ0xagpj89l94HebUk1pse9D3tCNiz/AjLS11iQVB9JpBkP3qbgoR+lHpzGNxYUGhCxqRnkmzcgXD2KPGk1/pWI4ci/YbJii4p3CstUEZXNU93DVK92GQ8dCwT2n2hdi3BElI8NB8dBCSh6xUC5Vx+/T1XxGTF03wq9KoyD0VnKWjACygc94B0m6puJ9xE/BlY+IpDqNseUMIfwOGCe1JreoTlSrDqhuPd/Z/Z6SvIMCVmmUxgfbmEZcH/Wm2WIIQmahBa8QNbz6T1+DyxJTTz4iyMTacW+qNv5To+ua6Q==
    - secure: H7oRfSKmSSAnpQZg4FaBwa0dsAEshyZwqx2zg4ud3h05ePMxiLgFH5+gAPOW8QqJqw1SK1B5c46mw6t/qoERgZNd1P2UAVFGY7ehVH/qwhjgBIHnCny4DH1gvddxrppfI/d/3tC4lCOkEvQ9wUgzCFqTF8Pdstv/iSpgJuDQiG+ErcjnUDnaZRMYdWzS0C9OBWhqDhJC1Kt5+rCp9JZv9bzTsWSM52TuEYHdF/zU/aRLDFhOcL0T9KcaybuHtCNJI9tcimkeE8yq76bjIe7Bdy375A9K9Z9Hg2ydCgf305waKx4VoiVnchEBd+p7FnUgi6GFLreYmW5ChPdUI597IQ==

before_install:
  - sudo apt-get -y update
  - sudo apt-get -y install libpq-dev
  - apt-get -y install python-dev
  - sudo pip install -U docker-compose
  - export APP_VERSION=$( git describe  --tags --long || echo ${COMMIT::12} )

before_script:
  - DOCKER_COMPOSE_FILE=deploy/docker-compose-deps.yml

  - docker-compose -f $DOCKER_COMPOSE_FILE up -d db
  - DB_CONTAINER=$( docker-compose -f $DOCKER_COMPOSE_FILE ps -q db )
  - export DB_HOST=$( docker inspect --format '{{ .NetworkSettings.IPAddress }}' $DB_CONTAINER )

  - docker-compose -f $DOCKER_COMPOSE_FILE run --rm auth-api bin/rails db:setup
  - docker-compose -f $DOCKER_COMPOSE_FILE up -d auth-api
  - AUTH_API_CONTAINER=$( docker-compose -f $DOCKER_COMPOSE_FILE ps -q auth-api )
  - export AUTH_API_HOST=$( docker inspect --format '{{ .NetworkSettings.IPAddress }}' $AUTH_API_CONTAINER )

script:
  - RAILS_ENV=test bin/rails db:setup
  - RALIS_ENV=test bin/rails spec

after_success:
  - ./deploy/build-docker-image.bash
  - docker push $USERS_API_REPO:$APP_VERSION

integrations:
  hub:
    - integrationName: partixyz
      type: docker 
